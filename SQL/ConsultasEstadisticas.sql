CREATE OR REPLACE PROCEDURE REP_ESTATISTICPROPOSALS_PR
(
    PROPOSAL_CURSOR out sys_refcursor
)
AS
BEGIN
    OPEN PROPOSAL_CURSOR FOR
    SELECT C.NAME, COUNT(P.ID_PROPOSAL) FROM PROPOSAL P
    JOIN PROPOSALXCATEGORY PC ON P.ID_PROPOSAL = PC.ID_PROPOSAL
    JOIN CATEGORY C ON PC.ID_CATEGORY = C.ID_CATEGORY
    GROUP BY C.NAME
    ORDER BY C.NAME;
END;
/
/*ESTADISTICAS DOS :V*/
CREATE OR REPLACE PROCEDURE REP_ESTATISTICCOUNTRY_PR
(
    COUNTRY_CURSOR out sys_refcursor
)
AS
BEGIN
    OPEN COUNTRY_CURSOR FOR
    SELECT COU.name, COUNT(P.ID_PROPOSAL) FROM PROPOSAL P
    JOIN PERSON PER ON P.ID_PERSON = PER.ID_PERSON
    JOIN COMMUNITY C ON PER.ID_COMMUNITY = C.ID_COMMUNITY
    JOIN DISTRICT D ON C.ID_DISTRICT = D.ID_DISTRICT
    JOIN CANTON CAN ON D.ID_CANTON = CAN.ID_CANTON
    JOIN PROVINCE PRO ON CAN.ID_PROVINCE = PRO.ID_PROVINCE
    JOIN COUNTRY COU ON PRO.ID_COUNTRY = COU.ID_COUNTRY
    GROUP BY COU.name
    ORDER BY COU.name;
END;
/
CREATE OR REPLACE PROCEDURE REP_ESTATISTICprovince_PR
(
    countryId IN NUMBER default 0,
    COUNTRY_CURSOR out sys_refcursor
)
AS
BEGIN
    OPEN COUNTRY_CURSOR FOR
    SELECT pro.name, COUNT(P.ID_PROPOSAL) FROM PROPOSAL P
    JOIN PERSON PER ON P.ID_PERSON = PER.ID_PERSON
    JOIN COMMUNITY C ON PER.ID_COMMUNITY = C.ID_COMMUNITY
    JOIN DISTRICT D ON C.ID_DISTRICT = D.ID_DISTRICT
    JOIN CANTON CAN ON D.ID_CANTON = CAN.ID_CANTON
    JOIN PROVINCE PRO ON CAN.ID_PROVINCE = PRO.ID_PROVINCE
    JOIN COUNTRY COU ON PRO.ID_COUNTRY = COU.ID_COUNTRY
    WHERE COU.ID_COUNTRY = countryId OR countryId=0
    GROUP BY pro.name
    ORDER BY pro.name;
END;
/
CREATE OR REPLACE PROCEDURE REP_ESTATISTICCanton_PR
(
    provinceId IN NUMBER default 0,
    canton_CURSOR out sys_refcursor
)
AS
BEGIN
    OPEN canton_CURSOR FOR
    SELECT can.name, COUNT(P.ID_PROPOSAL) FROM PROPOSAL P
    JOIN PERSON PER ON P.ID_PERSON = PER.ID_PERSON
    JOIN COMMUNITY C ON PER.ID_COMMUNITY = C.ID_COMMUNITY
    JOIN DISTRICT D ON C.ID_DISTRICT = D.ID_DISTRICT
    JOIN CANTON CAN ON D.ID_CANTON = CAN.ID_CANTON
    JOIN PROVINCE PRO ON CAN.ID_PROVINCE = PRO.ID_PROVINCE
    WHERE PRO.ID_PROVINCE = provinceId OR provinceId=0
    GROUP BY can.name
    ORDER BY can.name;
END;
/
CREATE OR REPLACE PROCEDURE REP_ESTATISTICDistrict_PR
(
    cantonId IN NUMBER default 0,
    district_CURSOR out sys_refcursor
)
AS
BEGIN
    OPEN district_CURSOR FOR
    SELECT D.name, COUNT(P.ID_PROPOSAL) FROM PROPOSAL P
    JOIN PERSON PER ON P.ID_PERSON = PER.ID_PERSON
    JOIN COMMUNITY C ON PER.ID_COMMUNITY = C.ID_COMMUNITY
    JOIN DISTRICT D ON C.ID_DISTRICT = D.ID_DISTRICT
    JOIN CANTON CAN ON D.ID_CANTON = CAN.ID_CANTON
    WHERE CAN.ID_CANTON = cantonId OR cantonId=0
    GROUP BY D.name
    ORDER BY D.name;
END;
/*Estadistica tres */
CREATE OR REPLACE PROCEDURE REP_ESTATISTICAGES_PR
(
    MENORES OUT NUMBER,
    VEINTE OUT NUMBER,
    TREINTA OUT NUMBER,
    CUARENTA OUT NUMBER,
    CINCUENTA OUT NUMBER,
    SESENTA OUT NUMBER,
    SETENTA OUT NUMBER,
    DORADOS OUT NUMBER
)
AS
BEGIN
    SELECT COUNT(P.ID_PERSON) INTO MENORES FROM PERSON P
    WHERE MONTHS_BETWEEN(SYSDATE,BIRTHDATE)/12<=18;
    SELECT COUNT(P.ID_PERSON) INTO VEINTE FROM PERSON P
    WHERE MONTHS_BETWEEN(SYSDATE,BIRTHDATE)/12<=25;
    SELECT COUNT(P.ID_PERSON) INTO TREINTA FROM PERSON P
    WHERE MONTHS_BETWEEN(SYSDATE,BIRTHDATE)/12<=35;
    SELECT COUNT(P.ID_PERSON) INTO CUARENTA FROM PERSON P
    WHERE MONTHS_BETWEEN(SYSDATE,BIRTHDATE)/12<=45;
    SELECT COUNT(P.ID_PERSON) INTO CINCUENTA FROM PERSON P
    WHERE MONTHS_BETWEEN(SYSDATE,BIRTHDATE)/12<=55;
    SELECT COUNT(P.ID_PERSON) INTO SESENTA FROM PERSON P
    WHERE MONTHS_BETWEEN(SYSDATE,BIRTHDATE)/12<=65;
    SELECT COUNT(P.ID_PERSON) INTO SETENTA FROM PERSON P
    WHERE MONTHS_BETWEEN(SYSDATE,BIRTHDATE)/12<=75;
    SELECT COUNT(P.ID_PERSON) INTO DORADOS FROM PERSON P
    WHERE MONTHS_BETWEEN(SYSDATE,BIRTHDATE)/12>75;
END;
/*FALTA LA CUATRO */
CREATE OR REPLACE PROCEDURE REP_ESTATISTICCOUNTRY_PR
(
    COUNTRY_CURSOR out sys_refcursor
)
AS
BEGIN
    OPEN COUNTRY_CURSOR FOR
    SELECT COU.name, COUNT(P.ID_PERSON) FROM PERSON P
    JOIN COMMUNITY C ON P.ID_COMMUNITY = C.ID_COMMUNITY
    JOIN DISTRICT D ON C.ID_DISTRICT = D.ID_DISTRICT
    JOIN CANTON CAN ON D.ID_CANTON = CAN.ID_CANTON
    JOIN PROVINCE PRO ON CAN.ID_PROVINCE = PRO.ID_PROVINCE
    JOIN COUNTRY COU ON PRO.ID_COUNTRY = COU.ID_COUNTRY
    GROUP BY COU.name
    ORDER BY COU.name;
END;
/
CREATE OR REPLACE PROCEDURE REP_ESTATISTICprovince_PR
(
    countryId IN NUMBER default 0,
    COUNTRY_CURSOR out sys_refcursor
)
AS
BEGIN
    OPEN COUNTRY_CURSOR FOR
    SELECT pro.name, COUNT(P.ID_PERSON) FROM PERSON P
    JOIN COMMUNITY C ON P.ID_COMMUNITY = C.ID_COMMUNITY
    JOIN DISTRICT D ON C.ID_DISTRICT = D.ID_DISTRICT
    JOIN CANTON CAN ON D.ID_CANTON = CAN.ID_CANTON
    JOIN PROVINCE PRO ON CAN.ID_PROVINCE = PRO.ID_PROVINCE
    JOIN COUNTRY COU ON PRO.ID_COUNTRY = COU.ID_COUNTRY
    WHERE COU.ID_COUNTRY = countryId OR countryId=0
    GROUP BY pro.name
    ORDER BY pro.name;
END;
/
CREATE OR REPLACE PROCEDURE REP_ESTATISTICCanton_PR
(
    provinceId IN NUMBER default 0,
    canton_CURSOR out sys_refcursor
)
AS
BEGIN
    OPEN canton_CURSOR FOR
    SELECT can.name, COUNT(P.ID_PERSON) FROM PERSON P
    JOIN COMMUNITY C ON P.ID_COMMUNITY = C.ID_COMMUNITY
    JOIN DISTRICT D ON C.ID_DISTRICT = D.ID_DISTRICT
    JOIN CANTON CAN ON D.ID_CANTON = CAN.ID_CANTON
    JOIN PROVINCE PRO ON CAN.ID_PROVINCE = PRO.ID_PROVINCE
    WHERE PRO.ID_PROVINCE = provinceId OR provinceId=0
    GROUP BY can.name
    ORDER BY can.name;
END;
/
CREATE OR REPLACE PROCEDURE REP_ESTATISTICDistrict_PR
(
    cantonId IN NUMBER default 0,
    district_CURSOR out sys_refcursor
)
AS
BEGIN
    OPEN district_CURSOR FOR
    SELECT D.name, COUNT(P.ID_PERSON) FROM PERSON P
    JOIN COMMUNITY C ON P.ID_COMMUNITY = C.ID_COMMUNITY
    JOIN DISTRICT D ON C.ID_DISTRICT = D.ID_DISTRICT
    JOIN CANTON CAN ON D.ID_CANTON = CAN.ID_CANTON
    WHERE CAN.ID_CANTON = cantonId OR cantonId=0
    GROUP BY D.name
    ORDER BY D.name;
END;